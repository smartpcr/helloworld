global:
    subscriptionName: {{ .Values.subscriptionName }}
    tenantId: {{ .Values.tenantId }}
    location: {{ .Values.location }}
    servicePrincipal: "{{ .Values.productName }}-{{ .Values.envName }}-{{ .Values.owner }}-{{ .Values.loc }}-sp"
    servicePrincipalAppId: {{ .Values.servicePrincipalAppId }}
    servicePrincipalCertThumbprint: {{ .Values.servicePrincipalCertThumbprint }}
    resourceGroup: "{{ .Values.productName }}-{{ .Values.envName }}-{{ .Values.owner }}-{{ .Values.loc }}-rg"
    aks: true
    sf: false
kv:
    name: "{{ .Values.owner }}-kv"
    resourceGroup: "{{ .Values.owner }}"
    location: "{{ .Values.location }}"
terraform:
    resourceGroup: "{{ .Values.owner }}"
    location: "{{ .Values.location }}"
    servicePrincipal: "{{ .Values.productName }}-{{ .Values.envName }}-{{ .Values.owner }}-tf"
    servicePrincipalAppId: 
    servicePrincipalSecretName: "{{ .Values.productName }}-{{ .Values.envName }}-{{ .Values.owner }}-tf-secret"
    stateStorageAccountName: "tfstorage{{ .Values.owner }}"
    stateStorageAccountConnectionString:
    stateBlobContainerName: "tfstate"
acr:
    name: "{{ .Values.owner }}acr{{ .Values.envName }}"
    resourceGroup: "{{ .Values.owner }}"
    location: "{{ .Values.location }}"
    passwordSecretName: "acr-{{ .Values.owner }}acr-{{ .Values.envName }}-pwd"
    email: {{ .Values.email }}
sf:
    serviceFabricClusterName: "{{ .Values.productName }}-{{ .Values.envName }}-{{ .Values.owner }}-{{ .Values.loc }}-sf"
    managementCert:
    nodeTypes:
        - frontend:
            nodeCount: 3
            vmSize: Standard_DS1
        - backend:
            nodeCount: 2
            vmSize: Standard_DS4
        - management:
            nodeCount: 1
            vmSize: Standard_DS4
aks:
    clusterName: "{{ .Values.productName }}-{{ .Values.envName }}-{{ .Values.owner }}-k8s"
    resourceGroup: "{{ .Values.productName }}-{{ .Values.envName }}-{{ .Values.owner }}-k8s"
    location: "{{ .Values.location }}"
    dnsPrefix: {{ .Values.aksDnsPrefix }}
    servicePrincipal: "{{ .Values.productName }}-{{ .Values.envName }}-{{ .Values.owner }}-k8s-webapp"
    servicePrincipalAppId: {{ .Values.aksServicePrincipalAppId }}
    servicePrincipalPassword: "{{ .Values.productName }}-{{ .Values.envName }}-{{ .Values.owner }}-k8s-webapp-pwd"
    nodeCount: 3
    vmSize: Standard_D1_v2
    ssh_pubblic_key: "{{ .Values.productName }}-{{ .Values.envName }}-{{ .Values.owner }}-k8s-cert-pub"
    ssh_private_key: "{{ .Values.productName }}-{{ .Values.envName }}-{{ .Values.owner }}-k8s-cert"
    ssh_cert_pwd_ame: "{{ .Values.productName }}-{{ .Values.envName }}-{{ .Values.owner }}-k8s-cert-pwd"