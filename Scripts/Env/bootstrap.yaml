global:
    subscriptionName: {{ .Values.subscriptionName }}
    tenantId: {{ .Values.tenantId }}
    location: {{ .Values.location }}
    servicePrincipal: "{{ .Values.productName }}-{{ .Values.envName }}-{{ .Values.owner }}-{{ .Values.loc }}-spn"
    servicePrincipalAppId: {{ .Values.servicePrincipalAppId }}
    servicePrincipalCertThumbprint: {{ .Values.servicePrincipalCertThumbprint }}
    resourceGroup: "{{ .Values.productName }}-{{ .Values.envName }}-{{ .Values.owner }}-{{ .Values.loc }}-rg"
    aks: true
kv:
    name: "{{ .Values.owner }}-kv"
    resourceGroup: "{{ .Values.owner }}"
    location: "{{ .Values.location }}"
terraform:
    resourceGroup: "tf-{{ .Values.owner }}-rg"
    location: "{{ .Values.location }}"
    servicePrincipal: "tf-{{ .Values.productName }}-{{ .Values.envName }}-{{ .Values.owner }}-spn"
    servicePrincipalAppId: 
    servicePrincipalSecretName: "tf-{{ .Values.productName }}-{{ .Values.envName }}-{{ .Values.owner }}-spn-pwd"
    stateStorageAccountName: "tfstorage{{ .Values.owner }}"
    stateStorageAccountConnectionString:
    stateBlobContainerName: "tfstate"
acr:
    name: "acr{{ .Values.owner }}{{ .Values.envName }}"
    resourceGroup: "acr-{{ .Values.owner }}-rg"
    location: "{{ .Values.location }}"
    passwordSecretName: "acr-{{ .Values.owner }}-{{ .Values.envName }}-pwd"
    email: {{ .Values.email }}
helm: 
    storageAccountName: "{{ .Values.helmStorageAccountName }}"
    blobContainerName: "{{ .Values.helmBlobContainerName }}"
sf:
    serviceFabricClusterName: "{{ .Values.productName }}-{{ .Values.envName }}-{{ .Values.owner }}-{{ .Values.loc }}-sf"
    managementCert:
    nodeTypes:
        - frontend:
            nodeCount: 3
            vmSize: Standard_DS1
        - backend:
            nodeCount: 2
            vmSize: Standard_DS4
        - management:
            nodeCount: 1
            vmSize: Standard_DS4
aks:
    clusterName: "k8s-{{ .Values.productName }}-{{ .Values.envName }}-{{ .Values.owner }}-cluster"
    resourceGroup: "k8s-{{ .Values.productName }}-{{ .Values.envName }}-{{ .Values.owner }}-rg"
    location: "{{ .Values.location }}"
    dnsPrefix: {{ .Values.aksDnsPrefix }}
    servicePrincipal: "k8s-{{ .Values.productName }}-{{ .Values.envName }}-{{ .Values.owner }}-spn"
    servicePrincipalAppId: "{{ .Values.aksServicePrincipalAppId }}"
    servicePrincipalPassword: "k8s-{{ .Values.productName }}-{{ .Values.envName }}-{{ .Values.owner }}-spn-pwd"
    nodeCount: 3
    vmSize: Standard_D1_v2
    ssh_pubblic_key: "k8s-ssh-{{ .Values.productName }}-{{ .Values.envName }}-{{ .Values.owner }}-pub"
    ssh_private_key: "k8s-ssh-{{ .Values.productName }}-{{ .Values.envName }}-{{ .Values.owner }}-key"
    ssh_cert_pwd_ame: "k8s-ssh-{{ .Values.productName }}-{{ .Values.envName }}-{{ .Values.owner }}-pwd"