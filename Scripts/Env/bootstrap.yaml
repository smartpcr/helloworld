global:
    subscriptionName: "{{ .Values.global.subscriptionName }}"
    tenantId: "{{ .Values.global.tenantId }}"
    location: "{{ .Values.global.location }}"
    servicePrincipal: "{{ .Values.global.productShortName }}-{{ .Values.global.envName }}-{{ .Values.global.owner }}-{{ .Values.global.loc }}-spn"
    resourceGroup: "{{ .Values.global.productName }}-{{ .Values.global.envName }}-{{ .Values.global.owner }}-{{ .Values.global.loc }}-rg"
    aks: true
    acr: true
kv:
    name: "{{ .Values.global.subscriptionAlias }}-kv"
    resourceGroup: "{{ .Values.global.subscriptionAlias }}-rg"
    location: "{{ .Values.global.location }}"
terraform:
    resourceGroup: "{{ .Values.global.owner }}-tf-rg"
    location: "{{ .Values.global.location }}"
    servicePrincipal: "{{ .Values.global.productShortName }}-{{ .Values.global.envName }}-{{ .Values.global.owner }}-tf-spn"
    servicePrincipalAppId: 
    servicePrincipalSecretName: "{{ .Values.global.productShortName }}-{{ .Values.global.envName }}-{{ .Values.global.owner }}-tf-spn-pwd"
    stateStorageAccountName: "{{ .Values.global.owner }}tfstorage"
    stateStorageAccountConnectionString:
    stateBlobContainerName: "tfstate"
acr:
    name: "{{ .Values.global.subscriptionAlias }}{{ .Values.global.owner }}{{ .Values.global.envName }}acr"
    resourceGroup: "{{ .Values.global.owner }}-acr-rg"
    location: "{{ .Values.global.location }}"
    passwordSecretName: "{{ .Values.global.owner }}-{{ .Values.global.envName }}-acr-pwd"
    email: "{{ .Values.acr.email }}"
helm: 
    storageAccountName: "{{ .Values.helm.helmStorageAccountName }}"
    blobContainerName: "{{ .Values.helm.helmBlobContainerName }}"
sf:
    serviceFabricClusterName: "{{ .Values.global.productShortName }}-{{ .Values.global.envName }}-{{ .Values.global.owner }}-{{ .Values.global.loc }}-sfcluster"
    managementCert:
    nodeTypes:
        - frontend:
            nodeCount: 3
            vmSize: Standard_DS1
        - backend:
            nodeCount: 2
            vmSize: Standard_DS4
        - management:
            nodeCount: 1
            vmSize: Standard_DS4
aks:
    clusterName: "{{ .Values.global.productShortName }}-{{ .Values.global.envName }}-{{ .Values.global.owner }}-k8s-cluster"
    resourceGroup: "{{ .Values.global.productName }}-{{ .Values.global.envName }}-{{ .Values.global.owner }}-k8s-rg"
    location: "{{ .Values.global.location }}"
    dnsPrefix: {{ .Values.aks.aksDnsPrefix }}
    version: "1.11.9"
    servicePrincipal: "{{ .Values.global.productShortName }}-{{ .Values.global.envName }}-{{ .Values.global.owner }}-k8s-spn"
    servicePrincipalPassword: "{{ .Values.global.productShortName }}-{{ .Values.global.envName }}-{{ .Values.global.owner }}-k8s-spn-pwd"
    clientAppName: "{{ .Values.global.productShortName }}-{{ .Values.global.envName }}-{{ .Values.global.owner }}-k8s-client"
    ownerUpn: "{{ .Values.aks.aksOwnerAadUpn }}"
    nodeCount: 3
    vmSize: Standard_D1_v2
    adminUserName: "{{ .Values.aks.adminUsername }}"
    ssh_pubblic_key: "{{ .Values.global.productShortName }}-{{ .Values.global.envName }}-{{ .Values.global.owner }}-k8s-ssh-pub"
    ssh_private_key: "{{ .Values.global.productShortName }}-{{ .Values.global.envName }}-{{ .Values.global.owner }}-k8s-ssh-key"
    ssh_cert_pwd_ame: "{{ .Values.global.productShortName }}-{{ .Values.global.envName }}-{{ .Values.global.owner }}-k8s-ssh-pwd"
    purpose: "{{ .Values.aks.purpose }}"
    useDevSpaces: true
kvSample:
    servicePrincipal: "{{ .Values.global.subscriptionAlias }}-readonly-spn"
    servicePrincipalPwd: "{{ .Values.global.subscriptionAlias }}-readonly-spn-pwd"